!function(){"use strict";angular.module("app",["ui.router","app.auth","app.main","app.account","app.tasks","angulartics","angulartics.google.analytics"])}(),function(){"use strict";angular.module("app.account",["app.oauthButtons","app.auth"])}(),function(){"use strict";function t(t){t.configureStates(n())}function n(){return[{state:"main",config:{url:"/",templateUrl:"app/main/main.html",controller:"mainController",controllerAs:"vm"}}]}t.$inject=["routerHelper"],angular.module("app.main",["ngDialog","inputDropdown"]).run(t)}(),function(){"use strict";function t(t){t.configureStates(n())}function n(){return[{state:"myOrders",config:{url:"/",templateUrl:"app/tasks/orders/orders.html",controller:"ordersController",controllerAs:"vm",authenticate:!0}},{state:"dashboard",config:{url:"/",templateUrl:"app/tasks/dashboard/dashboard.html",controller:"dashboardController",controllerAs:"vm",authenticate:!0}}]}t.$inject=["routerHelper"],angular.module("app.tasks",["ngDialog","ngResource","app.auth"]).run(t)}(),function(){"use strict";angular.module("app.util",[])}(),function(){"use strict";angular.module("app.oauthButtons",[])}(),function(){"use strict";angular.module("app.auth",["ngCookies","ui.router","app.util","ngResource","app.constants"]).config(["$httpProvider",function(t){t.interceptors.push("authInterceptor")}])}(),function(){"use strict";angular.module("app.constants",[]).constant("appConfig",{userRoles:["guest","user","admin"]})}(),function(){"use strict";function t(t,n,o){function e(t){function e(t,e){t.forEach(function(t){n.state(t.state,t.config)}),e&&!a&&(a=!0,o.otherwise(e))}function r(){return t.get()}var a=!1,i={configureStates:e,getStates:r};return i}this.$get=e,t.html5Mode(!0),e.$inject=["$state"]}angular.module("app").provider("routerHelper",t),t.$inject=["$locationProvider","$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function t(t){function n(){r.signup=o,r.createTask=e,r.selectedDropdownItem=null,r.dropdownItems=["Pintura","Conserto","Geral","Outros"]}function o(){t.openConfirm({template:"app/account/signup/signup.html",className:"ngdialog-theme-plain",controller:"signupController",controllerAs:"vm",data:r.user})}function e(n){t.openConfirm({template:"app/tasks/task/task.html",className:"ngdialog-theme-plain",controller:"taskController",controllerAs:"vm"})}var r=this;r.title="mainController",n()}angular.module("app.main").controller("mainController",t),t.$inject=["ngDialog"]}(),function(){"use strict";function t(t){var n=t("/api/tasks/:id/:controller",{id:"@_id"},{mine:{method:"GET",params:{id:"mine"}},deactivate:{method:"PUT",params:{controller:"deactivate"}},apply:{method:"PUT",params:{controller:"apply"}},unapply:{method:"PUT",params:{controller:"unapply"}}});return n}angular.module("app.tasks").factory("TaskService",t),t.$inject=["$resource"]}(),function(){"use strict";function t(t,n){function o(){r.login=e}function e(){t.login({email:r.user.email,password:r.user.password}).then(function(t){n.closeThisDialog()})["catch"](function(t){r.error=t})}var r=this;r.title="loginController",o()}angular.module("app.account").controller("loginController",t),t.$inject=["Auth","$scope"]}(),function(){"use strict";function t(t,n){function o(){r.user={},r.register=e,n.hasOwnProperty("ngDialogData")&&(r.user.name=n.ngDialogData.name),n.hasOwnProperty("ngDialogData")&&(r.user.email=n.ngDialogData.email)}function e(){t.createUser({name:r.user.name,email:r.user.email,phone:r.user.phone,password:r.user.password}).then(function(t){n.closeThisDialog()})["catch"](function(t){t=t.data,r.errors=t.errors})}var r=this;o()}angular.module("app.account").controller("signupController",t),t.$inject=["Auth","$scope"]}(),function(){"use strict";function t(t,n){function o(){a.apply=e,a.unapply=r,n.get(function(t){a.tasks=t.tasks},function(t){console.log(t)})}function e(t){n.apply({id:t._id},{},function(n){t.isCandidate=!0},function(t){console.log(t)})}function r(t){n.unapply({id:t._id},{},function(n){t.isCandidate=!1},function(t){console.log(t)})}var a=this;a.title="dashboardController",o()}angular.module("app.tasks").controller("dashboardController",t),t.$inject=["Auth","TaskService"]}(),function(){"use strict";function t(t,n){function o(){a.askTask=e,a.deactivate=r,t.mine(function(t){a.tasks=t.tasks},function(t){console.log(t)})}function e(){n.openConfirm({template:"app/tasks/task/task.html",className:"ngdialog-theme-plain",controller:"taskController",controllerAs:"vm"}).then(function(t){a.tasks.push(t)})}function r(n){t.deactivate({id:n._id},{},function(t){n.active=!1},function(t){console.log(t)})}var a=this;a.title="ordersController",o()}angular.module("app.tasks").controller("ordersController",t),t.$inject=["TaskService","ngDialog"]}(),function(){"use strict";function t(t,n,o,e,r){function a(){l.save=i,l.task={}}function i(){t.isLoggedIn().then(function(t){t?n.save(l.task,function(t){o.confirm(t),r.go("myOrders")},function(t){console.log(t)}):u()})}function u(){e.openConfirm({template:"app/account/signup/signup.html",className:"ngdialog-theme-plain",controller:"signupController",controllerAs:"vm"})}var l=this;l.title="taskController",a()}angular.module("app.tasks").controller("taskController",t),t.$inject=["Auth","TaskService","$scope","ngDialog","$state"]}(),function(){"use strict";function t(){var t={bindToController:!0,controller:n,controllerAs:"vm",restrict:"EA",templateUrl:"components/footer/footer.html"};return t}function n(){}angular.module("app").directive("footer",t)}(),function(){"use strict";function t(t){function n(t){return angular.isFunction(t)?t:angular.noop}function o(t){var n=document.createElement("a");return n.href=t,""===n.host&&(n.href=n.href),n}function e(n,o){return n=r.urlParse(n),o=o&&[].concat(o)||[],o=o.map(r.urlParse),o.push(t.location),o=o.filter(function(t){return n.hostname===t.hostname&&n.port===t.port&&n.protocol===t.protocol}),o.length>=1}var r={safeCb:n,urlParse:o,isSameOrigin:e};return r}angular.module("app.util").factory("Util",t),t.$inject=["$window"]}(),function(){"use strict";function t(t){function n(){e.loginOauth=o}function o(n){t.location.href="/auth/"+n}var e=this;n()}angular.module("app.oauthButtons").controller("oauthButtonsController",t),t.$inject=["$window"]}(),function(){"use strict";function t(){var t={templateUrl:"components/oauth-buttons/oauth-buttons.html",controller:"oauthButtonsController",controllerAs:"vm",restrict:"EA",scope:{classes:"@"}};return t}angular.module("app.oauthButtons").directive("oauthButtons",t)}(),function(){"use strict";function t(t,n,o,e){function r(n){return n.headers=n.headers||{},t.get("token")&&o.isSameOrigin(n.url)&&(n.headers.Authorization="Bearer "+t.get("token")),n}function a(o){return 401===o.status&&((i||(i=e.get("$state"))).go("main"),t.remove("token")),n.reject(o)}var i,u={request:r,responseError:a};return u}angular.module("app.auth").factory("authInterceptor",t),t.$inject=["$cookies","$q","Util","$injector"]}(),function(){"use strict";angular.module("app.auth").run(["$rootScope","$state","Auth",function(t,n,o){t.$on("$stateChangeStart",function(t,e){e.authenticate&&("string"==typeof e.authenticate?o.hasRole(e.authenticate,_.noop).then(function(e){return e?void 0:(t.preventDefault(),o.isLoggedIn(_.noop).then(function(t){n.go("main")}))}):o.isLoggedIn(_.noop).then(function(o){o||(t.preventDefault(),n.go("main"))}))})}])}(),function(){"use strict";function t(t,n,o,e,r,a,i,u){function l(t,r){return n.post("/auth/local",{email:t.email,password:t.password}).then(function(t){return o.put("token",t.data.token),$=i.get(),u.$emit("login",{}),$.$promise}).then(function(t){return v(r)(null,t),t})["catch"](function(t){return C.logout(),v(r)(t.data),e.reject(t.data)})}function s(){o.remove("token"),$={}}function c(t,n){return i.save(t,function(e){return o.put("token",e.token),$=i.get(),u.$emit("login",{}),v(n)(null,t)},function(t){return C.logout(),v(n)(t)}).$promise}function p(t,n,o){return i.changePassword({id:$._id},{oldPassword:t,newPassword:n},function(){return v(o)(null)},function(t){return v(o)(t)}).$promise}function g(t){if(0===arguments.length)return $;var n=$.hasOwnProperty("$promise")?$.$promise:$;return e.when(n).then(function(n){return v(t)(n),n},function(){return v(t)({}),{}})}function f(t){return 0===arguments.length&&C.getCurrentUser(function(t){return t.hasOwnProperty("role")}),C.getCurrentUser(null).then(function(n){var o=n.hasOwnProperty("role");return v(t)(o),o})}function m(t,n){var o=function(t,n){return k.indexOf(t)>=k.indexOf(n)};return arguments.length<2?o($.role,t):C.getCurrentUser(null).then(function(e){var r=e.hasOwnProperty("role")?o(e.role,t):!1;return v(n)(r),r})}function d(){return C.hasRole.apply(C,[].concat.apply(["admin"],arguments))}function h(){return o.get("token")}var v=a.safeCb,$={},k=r.userRoles||[];o.get("token")&&"/logout"!==t.path()&&($=i.get());var C={login:l,logout:s,createUser:c,changePassword:p,getCurrentUser:g,isLoggedIn:f,hasRole:m,isAdmin:d,getToken:h};return C}angular.module("app.auth").factory("Auth",t),t.$inject=["$location","$http","$cookies","$q","appConfig","Util","User","$rootScope"]}(),function(){"use strict";function t(t){return t("/api/users/:id/:controller",{id:"@_id"},{changePassword:{method:"PUT",params:{controller:"password"}},get:{method:"GET",params:{id:"me"}}})}angular.module("app.auth").factory("User",t),t.$inject=["$resource"]}(),function(){"use strict";function t(t,o,e,r){function a(t,n,o){}var i={bindToController:!0,controller:n,controllerAs:"vm",link:a,restrict:"EA",scope:{},templateUrl:"components/header/header.html"};return i}function n(t,n,o,e){function r(){c.signup=a,c.login=i,c.myOrders=u,c.dashboard=l,c.logout=s,n.isLoggedIn().then(function(t){c.isLoggedIn=t})}function a(){t.openConfirm({template:"app/account/signup/signup.html",className:"ngdialog-theme-plain",controller:"signupController",controllerAs:"vm"})}function i(){t.openConfirm({template:"app/account/login/login.html",className:"ngdialog-theme-plain",controller:"loginController",controllerAs:"vm"})}function u(){o.go("myOrders")}function l(){o.go("dashboard")}function s(){n.logout(),n.isLoggedIn().then(function(t){c.isLoggedIn=t}),o.go("main")}var c=this;c.title="headerController",e.$on("login",function(t,o){n.isLoggedIn().then(function(t){c.isLoggedIn=t})}),r()}angular.module("app").directive("header",t),t.$inject=["ngDialog","Auth","$state","$rootScope"],n.$inject=["ngDialog","Auth","$state","$rootScope"]}();